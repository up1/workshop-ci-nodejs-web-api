{
	"info": {
		"_postman_id": "ad2e80ee-bfa3-468d-a188-f2e221857869",
		"name": "docker",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/ThailandPost~61950a6c-9eb7-4c21-96ec-a41731bf5a32/collection/1453931-ad2e80ee-bfa3-468d-a188-f2e221857869?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "Get all employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check status = success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"});",
							"",
							"pm.test(\"Data size = 3\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.length).to.eql(3);",
							"});",
							"",
							"",
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"status\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"length\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"data\": {",
							"      \"type\": \"array\",",
							"      \"items\": [",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"status\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"date_created\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"name\",",
							"            \"status\",",
							"            \"date_created\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"status\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"date_created\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"name\",",
							"            \"status\",",
							"            \"date_created\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"status\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"date_created\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"name\",",
							"            \"status\",",
							"            \"date_created\"",
							"          ]",
							"        }",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"status\",",
							"    \"length\",",
							"    \"data\"",
							"  ]",
							"};",
							"",
							"var data1 = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://backend:3000/db"
			},
			"response": []
		},
		{
			"name": "Hello",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        message: { type: \"string\" }",
							"    },",
							"    required: [\"message\"]",
							"};",
							"",
							"pm.test(\"Response matches JSON schema\", function () {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Response message is 'Hello World 2'\", function () {",
							"    pm.expect(response.message).to.eql(\"Hello World 2\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://backend:3000/"
			},
			"response": []
		},
		{
			"name": "Hello2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://backend:3000/hello"
			},
			"response": []
		}
	]
}